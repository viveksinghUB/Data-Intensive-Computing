<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource caption='Data by country (Worldbankdata)' inline='true' name='excel-direct.42012.939728854166' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata)' name='excel-direct.42012.939728854166leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' filename='C:/Users/Ashwini/Box Sync/Courses/Spring 2017/587 DIC/Term Project/TermProjectData/Worldbankdata.xlsx' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.939728854166leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.111111' measure-ordering='alphabetic' measure-percentage='0.888889' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Data by country (Worldbankdata) (2)' inline='true' name='excel-direct.42012.950994398147' version='10.2'>
      <connection class='federated' prefer-ind-semantics='true'>
        <named-connections>
          <named-connection caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147leaf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ashwini/Box Sync/Courses/Spring 2017/587 DIC/Term Project/TermProjectData/Worldbankdata.xlsx' interpretationMode='0' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.42012.950994398147leaf' name='&apos;Data by country$&apos;' table='[&apos;Data by country$&apos;]' type='table'>
          <columns gridOrigin='A1:BE2355:no:A1:BE2355:0' header='yes' outcome='2'>
            <column datatype='string' name='Country Name' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='integer' name='Stock: Listed domestic companies (count)' ordinal='2' />
            <column datatype='integer' name='Stock: Market cap companies (current US$)' ordinal='3' />
            <column datatype='integer' name='Stock: Traded, total value (current US$)' ordinal='4' />
            <column datatype='integer' name='Stock: Market cap of companies (% GDP)' ordinal='5' />
            <column datatype='integer' name='Stock: Traded, total value (% GDP)' ordinal='6' />
            <column datatype='integer' name='Stock: Traded, turnover ratio (%)' ordinal='7' />
            <column datatype='integer' name='Banks: Comm branches (per 100k adults)' ordinal='8' />
            <column datatype='integer' name='Banks: Automated tellers (per 100k adults)' ordinal='9' />
            <column datatype='integer' name='Finance: Consumer price index (2005 = 100)' ordinal='10' />
            <column datatype='integer' name='Finance: Deposit interest rate (%)' ordinal='11' />
            <column datatype='integer' name='Finance: Lending interest rate (%)' ordinal='12' />
            <column datatype='integer' name='Finance: Real interest rate (%)' ordinal='13' />
            <column datatype='integer' name='Business: Start-up proc cost (% GNI per capita)' ordinal='14' />
            <column datatype='integer' name='Business: Cost to export ($ per container)' ordinal='15' />
            <column datatype='integer' name='Business: Cost to import ($ per container)' ordinal='16' />
            <column datatype='integer' name='Business: Ease of biz index (1=easiest)' ordinal='17' />
            <column datatype='integer' name='Business: Start-up procedures (count)' ordinal='18' />
            <column datatype='integer' name='Business: Legal rights (0=weak, 10=strong)' ordinal='19' />
            <column datatype='integer' name='Business: Time to start a business (days)' ordinal='20' />
            <column datatype='integer' name='Business: Time to prep &amp; pay taxes (hours)' ordinal='21' />
            <column datatype='integer' name='Business: Total tax rate (% of commercial profits)' ordinal='22' />
            <column datatype='integer' name='Business: Firing cost (weeks of wages)' ordinal='23' />
            <column datatype='integer' name='R&amp;D: Scientific &amp; tech articles' ordinal='24' />
            <column datatype='integer' name='Transit: Air transport, passengers (count)' ordinal='25' />
            <column datatype='integer' name='Transit: Railways, (million passenger-km)' ordinal='26' />
            <column datatype='integer' name='Transit: Passenger cars (per 1,000 people)' ordinal='27' />
            <column datatype='integer' name='Business: Mobile phone subscribers' ordinal='28' />
            <column datatype='integer' name='Business: Internet users (per 100 people)' ordinal='29' />
            <column datatype='integer' name='Military: Armed forces personnel' ordinal='30' />
            <column datatype='real' name='Military: Expenditure (% GDP)' ordinal='31' />
            <column datatype='real' name='Military: Expenditure (% central govt exp)' ordinal='32' />
            <column datatype='integer' name='Business: Exports (% GDP)' ordinal='33' />
            <column datatype='integer' name='Business: Imports (% GDP)' ordinal='34' />
            <column datatype='integer' name='Business: Trade (% GDP)' ordinal='35' />
            <column datatype='integer' name='Business: Exports (current US$)' ordinal='36' />
            <column datatype='integer' name='Business: Imports (current US$)' ordinal='37' />
            <column datatype='integer' name='Finance: GDP (current US$)' ordinal='38' />
            <column datatype='integer' name='Finance: GDP per capita (current US$)' ordinal='39' />
            <column datatype='integer' name='Finance: Net income from abroad (current LCU)' ordinal='40' />
            <column datatype='integer' name='Government: Seats women in nat parliament (%)' ordinal='41' />
            <column datatype='integer' name='Health: Mortality, under-5 (per 1,000 live births)' ordinal='42' />
            <column datatype='integer' name='Health: Health expenditure per capita (current US$)' ordinal='43' />
            <column datatype='integer' name='Health: Health expenditure, total (% GDP)' ordinal='44' />
            <column datatype='integer' name='Population: Total (count)' ordinal='45' />
            <column datatype='integer' name='Population: Urban (count)' ordinal='46' />
            <column datatype='integer' name='Population:: Birth rate, crude (per 1,000)' ordinal='47' />
            <column datatype='integer' name='Health: Life expectancy at birth, female (years)' ordinal='48' />
            <column datatype='integer' name='Health: Life expectancy at birth, male (years)' ordinal='49' />
            <column datatype='integer' name='Health: Life expectancy at birth, total (years)' ordinal='50' />
            <column datatype='integer' name='Population: Ages 0-14 (% of total)' ordinal='51' />
            <column datatype='integer' name='Population: Ages 15-64 (% of total)' ordinal='52' />
            <column datatype='integer' name='Population: Ages 65+ (% of total)' ordinal='53' />
            <column datatype='integer' name='Business: International tourism inc (current US$)' ordinal='54' />
            <column datatype='integer' name='Business: International tourism, exp (current US$)' ordinal='55' />
            <column datatype='integer' name='Measures with values' ordinal='56' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Listed domestic companies (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Listed domestic companies (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Listed domestic companies (count)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap companies (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap companies (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap companies (current US$)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (current US$)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Market cap of companies (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Market cap of companies (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Market cap of companies (% GDP)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, total value (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, total value (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, total value (% GDP)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stock: Traded, turnover ratio (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stock: Traded, turnover ratio (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Stock: Traded, turnover ratio (%)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Comm branches (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Comm branches (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Comm branches (per 100k adults)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks: Automated tellers (per 100k adults)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Banks: Automated tellers (per 100k adults)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Banks: Automated tellers (per 100k adults)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Consumer price index (2005 = 100)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Consumer price index (2005 = 100)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Consumer price index (2005 = 100)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Deposit interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Deposit interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Deposit interest rate (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Lending interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Lending interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Lending interest rate (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Real interest rate (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Real interest rate (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Real interest rate (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up proc cost (% GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up proc cost (% GNI per capita)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up proc cost (% GNI per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to export ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to export ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to export ($ per container)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Cost to import ($ per container)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Cost to import ($ per container)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Cost to import ($ per container)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Ease of biz index (1=easiest)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Ease of biz index (1=easiest)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Ease of biz index (1=easiest)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Start-up procedures (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Start-up procedures (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Start-up procedures (count)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Legal rights (0=weak, 10=strong)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Legal rights (0=weak, 10=strong)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Legal rights (0=weak, 10=strong)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to start a business (days)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to start a business (days)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to start a business (days)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Time to prep &amp; pay taxes (hours)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Time to prep &amp; pay taxes (hours)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Time to prep &amp; pay taxes (hours)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Total tax rate (% of commercial profits)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Total tax rate (% of commercial profits)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Total tax rate (% of commercial profits)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Firing cost (weeks of wages)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Firing cost (weeks of wages)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Firing cost (weeks of wages)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>R&amp;D: Scientific &amp; tech articles</remote-name>
            <remote-type>20</remote-type>
            <local-name>[R&amp;D: Scientific &amp; tech articles]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>R&amp;D: Scientific &amp; tech articles</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Air transport, passengers (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Air transport, passengers (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Air transport, passengers (count)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Railways, (million passenger-km)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Railways, (million passenger-km)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Railways, (million passenger-km)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transit: Passenger cars (per 1,000 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Transit: Passenger cars (per 1,000 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Transit: Passenger cars (per 1,000 people)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Mobile phone subscribers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Mobile phone subscribers]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Mobile phone subscribers</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Internet users (per 100 people)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Internet users (per 100 people)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Internet users (per 100 people)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Armed forces personnel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Military: Armed forces personnel]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Armed forces personnel</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% GDP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% GDP)</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Military: Expenditure (% central govt exp)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Military: Expenditure (% central govt exp)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Military: Expenditure (% central govt exp)</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (% GDP)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (% GDP)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Trade (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Trade (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Trade (% GDP)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Exports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Exports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Exports (current US$)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: Imports (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: Imports (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: Imports (current US$)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP (current US$)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: GDP per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: GDP per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: GDP per capita (current US$)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Finance: Net income from abroad (current LCU)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Finance: Net income from abroad (current LCU)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Finance: Net income from abroad (current LCU)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government: Seats women in nat parliament (%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government: Seats women in nat parliament (%)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Government: Seats women in nat parliament (%)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Mortality, under-5 (per 1,000 live births)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Mortality, under-5 (per 1,000 live births)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Mortality, under-5 (per 1,000 live births)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure per capita (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure per capita (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure per capita (current US$)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Health expenditure, total (% GDP)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Health expenditure, total (% GDP)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Health expenditure, total (% GDP)</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Total (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Total (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Total (count)</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Urban (count)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Urban (count)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Urban (count)</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population:: Birth rate, crude (per 1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population:: Birth rate, crude (per 1,000)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population:: Birth rate, crude (per 1,000)</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, female (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, female (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, female (years)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, male (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, male (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, male (years)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health: Life expectancy at birth, total (years)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health: Life expectancy at birth, total (years)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Health: Life expectancy at birth, total (years)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 0-14 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 0-14 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 0-14 (% of total)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 15-64 (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 15-64 (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 15-64 (% of total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population: Ages 65+ (% of total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population: Ages 65+ (% of total)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Population: Ages 65+ (% of total)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism inc (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism inc (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism inc (current US$)</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business: International tourism, exp (current US$)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Business: International tourism, exp (current US$)]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Business: International tourism, exp (current US$)</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measures with values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measures with values]</local-name>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias>Measures with values</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[&apos;Data by country$&apos;]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:BE2355:no:A1:BE2355:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.111111' measure-ordering='alphabetic' measure-percentage='0.888889' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country Name:nk]' palette='tableau-20' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='GDP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='499' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' />
              <text column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='GDPPerCapita'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Finance: GDP per capita (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP per capita (current US$)]' derivation='Sum' name='[sum:Finance: GDP per capita (current US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[Latitude (generated)]</column>
            <column>[excel-direct.42012.950994398147].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' include-totals='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='on' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <color column='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' />
              <geometry column='[excel-direct.42012.950994398147].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='GDPYear'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Finance: GDP (current US$)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Finance: GDP (current US$)]' derivation='Sum' name='[sum:Finance: GDP (current US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[sum:Finance: GDP (current US$):qk]</rows>
        <cols>[excel-direct.42012.950994398147].[tyr:Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Population'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Total (count)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='Attribute' name='[attr:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Total (count)]' derivation='Sum' name='[sum:Population: Total (count):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <size column='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' />
              <lod column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
              <tooltip column='[excel-direct.42012.950994398147].[attr:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[Latitude (generated)]</rows>
        <cols>[excel-direct.42012.950994398147].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='PopulationAge'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data by country (Worldbankdata) (2)' name='excel-direct.42012.950994398147' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42012.950994398147'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population: Ages 0-14 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 15-64 (% of total)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population: Ages 65+ (% of total)]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population: Ages 0-14 (% of total)]' derivation='Sum' name='[sum:Population: Ages 0-14 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 15-64 (% of total)]' derivation='Sum' name='[sum:Population: Ages 15-64 (% of total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population: Ages 65+ (% of total)]' derivation='Sum' name='[sum:Population: Ages 65+ (% of total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42012.950994398147].[none:Country Name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country Name:nk]' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Aruba&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]' included-values='non-null' />
          <slices>
            <column>[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]</column>
            <column>[excel-direct.42012.950994398147].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42012.950994398147].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.42012.950994398147].[none:Country Name:nk]</rows>
        <cols>([excel-direct.42012.950994398147].[sum:Population: Ages 0-14 (% of total):qk] + ([excel-direct.42012.950994398147].[sum:Population: Ages 15-64 (% of total):qk] + [excel-direct.42012.950994398147].[sum:Population: Ages 65+ (% of total):qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 2' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP/Population Show&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='109' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5083' id='3' type='title' w='100000' x='0' y='0' />
            <zone fixed-size='79' h='9025' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5083' />
            <zone h='85477' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='14108'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Population' captured-sheet='Population' id='1' />
                  <story-point caption='GDP' captured-sheet='WorldGDPDashboard' id='2' />
                  <story-point caption='Population Age' captured-sheet='PopulationAge' id='3' />
                  <story-point caption='GDP Year' captured-sheet='GDPYear' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldData' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World GDP Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='965' maxwidth='1016' minheight='965' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4561' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11296' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4561' />
            <zone h='83728' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15857'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='World Population' captured-sheet='Population' id='3'>
                    <capturedDeltas>
                      <worksheet name='Population'>
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Latitude (generated)]' included-values='non-null' />
                        <filter class='quantitative' column='[excel-direct.42012.950994398147].[Longitude (generated)]' included-values='non-null' />
                        <style delta-type='added'>
                          <style-rule element='table'>
                            <format attr='break-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='omit-on-special' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                            <format attr='show-null-value-warning' field='[excel-direct.42012.950994398147].[none:Country Name:nk]' value='false' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='GDP and GDPper capita' captured-sheet='WorldGDPDashboard' id='4'>
                    <capturedDeltas>
                      <worksheet name='GDPPerCapita'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
                                  <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
                                  <field>[excel-direct.42012.950994398147].[Geometry (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Latitude (generated)]</field>
                                  <field>[excel-direct.42012.950994398147].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;China&quot;</value>
                                <value>23937</value>
                                <value>&quot;MULTIPOLYGON (((110.6906 20.1494,110.784 20.0176,110.9323 20.0176,111.0367 19.6386,110.9763 19.6386,110.8609 19.5232,110.806 19.5287,110.762 19.4243,110.6741 19.3859,110.5698 19.1332,110.5698 19.0508,110.5148 18.9903,110.5203 18.7871,110.4654 18.7706,110.4105 18.6607,110.2621 18.6662,110.1083 18.5399,110.0149 18.4135,109.7677 18.3971,109.7183 18.2982,109.7458 18.2542,109.57 18.2103,109.4546 18.2817,109.3118 18.3092,109.18 18.2872,109.1031 18.3641,108.9877 18.3586,108.8284 18.463,108.6856 18.5069,108.6911 18.7376,108.6196 18.8255,108.6581 18.9409,108.6141 19.1002,108.6746 19.1716,108.6306 19.2156,108.6856 19.3749,108.8723 19.4628,109.0042 19.5836,109.18 19.655,109.2074 19.721,109.158 19.7924,109.2624 19.9022,109.3173 19.9187,109.4052 19.8638,109.5205 19.8528,109.5151 19.9132,109.581 19.9846,109.7128 20.0121,109.8666 19.9407,109.938 19.9956,110.0095 19.9297,110.1193 20.0011,110.1578 20.067,110.2567 20.0341,110.3775 20.078,110.5753 20.0231,110.5698 20.0945,110.6906 20.1494)),((110.4215 21.0833,110.5533 21.0503,110.5039 20.9734,110.3555 20.9954,110.3116 21.0778,110.4215 21.0833)),((121.9574 30.1803,122.1003 30.1583,122.2266 30.1033,122.331 30.0209,122.32 29.9495,122.1662 29.9935,122.0289 29.9935,121.9739 30.0594,121.9574 30.1803)),((119.7711 25.6428,119.848 25.5494,119.837 25.4725,119.7052 25.434,119.7272 25.5219,119.6832 25.5988,119.7711 25.6428)),((121.4795 39.6508,121.5345 39.5739,121.4301 39.5079,121.3422 39.5244,121.3202 39.5903,121.4795 39.6508)),((114.227 22.5477,114.218 22.556,114.2088 22.5574,114.1865 22.5547,114.1778 22.5557,114.176 22.5602,114.1601 22.5614,114.1525 22.5551,114.1486 22.5422,114.1294 22.5422,114.1161 22.535,114.1125 22.5297,114.1072 22.5345,114.0969 22.5339,114.0914 22.5375,114.0784 22.5299,114.0849 22.5218,114.0787 22.5155,114.0727 22.5181,114.0603 22.5135,114.0557 22.5028,114.0392 22.5038,114.0265 22.5219,114.0151 22.523,114.0013 22.5269,113.9042 22.5335,113.7779 22.6819,113.7614 22.7533,113.668 22.7423,113.6131 22.8027,113.5856 22.9236,113.4922 22.9455,113.5252 22.8357,113.6131 22.7588,113.5691 22.7423,113.6021 22.6324,113.5527 22.572,113.5691 22.4896,113.5307 22.4017,113.6021 22.3687,113.5856 22.2424,113.5501 22.2222,113.5374 22.2222,113.5292 22.2165,113.5226 22.2274,113.5142 22.2362,113.528 22.1981,113.5168 22.1777,113.4593 22.1655,113.3384 22.193,113.2231 22.0336,113.1132 22.0721,113.1187 22.1875,113.0857 22.2039,113.0033 22.116,113.0308 21.9458,112.9099 21.8524,112.8385 21.9732,112.7451 21.9238,112.6408 21.781,112.5584 21.759,112.4155 21.8414,112.3991 21.737,112.2343 21.704,112.1738 21.8084,112.0145 21.7864,111.8937 21.6766,111.8277 21.6986,111.8442 21.7645,111.7728 21.7864,111.7618 21.6271,111.652 21.5283,111.597 21.5502,111.4817 21.5063,111.4322 21.5502,111.2729 21.4184,111.229 21.4843,111.0752 21.4623,110.8939 21.3854,110.7511 21.3854,110.6302 21.2261,110.4874 21.2206,110.3665 21.0998,110.2072 21.0394,110.1688 20.924,110.2017 20.8471,110.3226 20.8526,110.394 20.7922,110.3281 20.6823,110.405 20.5944,110.4709 20.5834,110.5368 20.479,110.4434 20.3307,110.3061 20.2593,110.1962 20.2758,110.1248 20.2428,110.0644 20.2923,109.938 20.2923,110.0149 20.4516,109.8337 20.5065,109.8337 20.5724,109.7403 20.6658,109.7787 20.7043,109.7623 20.8086,109.7018 20.8306,109.6689 20.9405,109.7128 21.0613,109.6744 21.1108,109.7732 21.2316,109.7677 21.336,109.9161 21.3635,109.9106 21.4733,109.8062 21.5063,109.7458 21.5832,109.7787 21.4898,109.6579 21.5173,109.6744 21.5997,109.5865 21.5832,109.5425 21.5008,109.4381 21.4568,109.158 21.4074,109.0481 21.4623,109.169 21.5283,109.1525 21.5832,108.9602 21.5997,108.7899 21.6436,108.746 21.6052,108.6856 21.704,108.6141 21.715,108.5592 21.7919,108.6141 21.8469,108.5482 21.8908,108.4878 21.8359,108.5757 21.6931,108.4768 21.5612,108.3944 21.5557,108.3669 21.6546,108.3175 21.6766,108.323 21.5887,108.1692 21.6052,108.1362 21.5447,107.9989 21.5447,107.9604 21.5447,107.878 21.6491,107.8231 21.6601,107.6693 21.6052,107.499 21.6162,107.488 21.6601,107.3672 21.6107,107.3067 21.7425,107.2353 21.704,107.087 21.8139,107.0266 21.8249,107.0595 21.9238,106.9991 21.9567,106.8068 21.9787,106.708 22.0282,106.6805 22.182,106.6915 22.2808,106.6585 22.3358,106.5761 22.3413,106.5651 22.4127,106.5926 22.5445,106.7189 22.6104,106.8288 22.8027,106.6585 22.8686,106.6036 22.9291,106.3234 22.8631,106.2191 22.9895,106.0103 22.995,105.9993 22.94,105.884 22.9181,105.7247 23.0664,105.5763 23.0939,105.5324 23.2037,105.439 23.3081,105.4115 23.2916,105.3291 23.3905,105.2193 23.2751,105.0819 23.2642,104.9556 23.1763,104.8183 23.1268,104.8457 22.9675,104.7359 22.8247,104.604 22.8302,104.3678 22.6928,104.2744 22.7423,104.2799 22.8357,104.0986 22.7917,104.0382 22.7148,104.0162 22.5226,103.9668 22.5061,103.824 22.6159,103.6482 22.7972,103.5218 22.594,103.4339 22.7148,103.4449 22.7533,103.3405 22.8192,103.2856 22.6874,103.2032 22.6544,103.1867 22.5665,103.0329 22.4456,102.934 22.4896,102.8846 22.594,102.7033 22.7038,102.577 22.7093,102.5165 22.7807,102.3298 22.5555,102.2529 22.4566,102.2693 22.4182,102.1485 22.4017,102.0331 22.4731,101.8738 22.3852,101.8024 22.4896,101.6871 22.4731,101.6266 22.2808,101.5497 22.2479,101.6047 22.16,101.5772 22.116,101.6211 21.9677,101.7145 21.9293,101.7804 21.8304,101.753 21.726,101.8244 21.6052,101.764 21.5777,101.7804 21.5118,101.742 21.314,101.8464 21.2426,101.731 21.1382,101.6761 21.1987,101.5992 21.1822,101.5607 21.2481,101.3959 21.2261,101.286 21.1767,101.2311 21.314,101.2696 21.3744,101.1982 21.4129,101.2146 21.5612,101.1762 21.5612,101.1487 21.5612,101.1597 21.6711,101.0883 21.77,101.0114 21.7095,100.885 21.6876,100.7257 21.5118,100.5829 21.4514,100.484 21.4568,100.4291 21.5447,100.2533 21.4678,100.127 21.5173,100.105 21.5942,100.1709 21.6656,100.127 21.704,99.9951 21.704,99.9402 21.8249,99.9951 21.9732,99.9622 22.0556,99.8688 22.0282,99.4787 22.138,99.3579 22.0941,99.2151 22.1215,99.1766 22.1875,99.237 22.2534,99.2535 22.3907,99.3634 22.4841,99.3854 22.5775,99.3139 22.7368,99.3908 22.8192,99.5611 22.9346,99.5172 23.0829,99.3249 23.1103,99.1766 23.0939,99.0503 23.1213,99.0338 23.1598,98.891 23.2092,98.9459 23.3081,98.9239 23.418,98.8031 23.5388,98.891 23.6157,98.8525 23.6322,98.8086 23.7695,98.6987 23.786,98.6822 23.9124,98.7756 24.0277,98.9019 24.1101,98.7152 24.1321,98.6108 24.0882,98.5504 24.1321,98.1164 24.0991,97.7923 23.9563,97.7099 23.8684,97.6385 23.8629,97.5396 23.9288,97.7428 24.1101,97.7428 24.2255,97.7813 24.2584,97.6824 24.3024,97.7264 24.3793,97.6934 24.4507,97.5396 24.4342,97.578 24.5606,97.589 24.7638,97.6604 24.7858,97.7428 24.9122,97.7319 25.0824,97.8143 25.1648,97.8527 25.2747,97.9241 25.2143,98.0615 25.3077,98.1603 25.456,98.1274 25.5219,98.2427 25.6153,98.3142 25.5494,98.402 25.5933,98.479 25.7801,98.5394 25.846,98.6438 25.7911,98.7097 25.857,98.6822 25.9394,98.6163 25.9779,98.7426 26.1921,98.6767 26.2415,98.7371 26.3514,98.7536 26.5601,98.7866 26.6206,98.7481 26.714,98.7646 26.7964,98.7042 27.2139,98.7371 27.3512,98.6877 27.4885,98.7042 27.5654,98.5888 27.5709,98.5394 27.6204,98.4405 27.6313,98.4295 27.5544,98.3196 27.5215,98.3032 27.6313,98.2263 27.7192,98.2263 27.8126,98.1768 27.8401,98.1988 27.9335,98.1439 27.95,98.1603 28.1038,98.1327 28.1545,98.0314 28.1923,98.0261 28.2459,97.9121 28.3675,97.7965 28.332,97.7379 28.4227,97.721 28.4982,97.6658 28.5352,97.5639 28.5435,97.5066 28.4938,97.5216 28.4476,97.4815 28.3788,97.5027 28.3373,97.4627 28.2741,97.3473 28.2081,97.1462 28.3532,97.0782 28.3713,96.9769 28.3297,96.8893 28.3856,96.8614 28.4854,96.767 28.5148,96.7451 28.5715,96.6136 28.6138,96.495 28.6092,96.5358 28.681,96.6212 28.7354,96.5177 28.8864,96.5215 28.9303,96.5079 28.9469,96.4406 28.9529,96.4346 29.0066,96.3681 29.0383,96.3681 29.1085,96.2616 29.0889,96.2133 29.0277,96.1831 29.1108,96.3017 29.1773,96.2624 29.243,96.1831 29.2717,96.1392 29.3427,96.0539 29.3827,95.9655 29.3759,95.8484 29.3163,95.8386 29.3533,95.757 29.3223,95.7087 29.2037,95.6097 29.2347,95.5002 29.1818,95.5093 29.1267,95.2993 29.1365,95.2728 29.1055,95.1361 29.0881,95.0968 29.1418,94.9941 29.144,94.7516 29.2294,94.6935 29.3178,94.5409 29.2196,94.4571 29.2128,94.3793 29.1538,94.2931 29.1523,94.2758 29.1131,94.3302 29.039,94.2607 28.9318,94.1783 28.9363,94.136 28.8902,93.9751 28.8215,93.8966 28.7573,93.7901 28.7369,93.707 28.6644,93.6231 28.6885,93.4486 28.6689,93.3308 28.6062,93.185 28.4944,93.1473 28.366,92.932 28.2489,92.9214 28.2006,92.7907 28.1877,92.6774 28.1507,92.6585 28.0744,92.7318 28.0548,92.7326 27.9861,92.6464 27.9128,92.478 27.8342,92.3194 27.7972,92.2937 27.8705,92.2129 27.8727,91.9236 27.7179,91.8503 27.7625,91.6433 27.761,91.5708 27.8478,91.6259 27.8894,91.4904 27.9677,91.3203 28.0637,91.2491 28.0637,91.1992 27.9882,91.1187 27.9939,91.0208 28.0221,90.9201 28.0488,90.8377 28.0433,90.7799 28.0419,90.6878 28.079,90.5835 28.0231,90.5042 28.0654,90.4846 28.1356,90.5473 28.1575,90.5737 28.2451,90.3479 28.3041,90.2686 28.2791,90.2119 28.36,90.1809 28.3207,90.0593 28.3456,89.9823 28.3154,89.8659 28.3124,89.7655 28.1824,89.5963 28.1636,89.4589 28.0049,89.3893 27.8901,89.3655 27.8676,89.2979 27.8524,89.2254 27.7836,89.2284 27.7345,89.128 27.6152,89.0531 27.608,88.978 27.5313,88.9515 27.4108,89.0043 27.3261,88.9232 27.325,88.8879 27.3403,88.8379 27.3792,88.7828 27.4543,88.7741 27.544,88.8485 27.668,88.8568 27.8153,88.8817 27.8916,88.8364 28.0155,88.7548 28.0805,88.6672 28.0767,88.6332 28.1228,88.5652 28.0903,88.5448 28.0344,88.4093 27.9821,88.251 27.9422,88.135 27.95,88.135 27.8785,87.9843 27.8869,87.8314 27.9514,87.7245 27.8048,87.6135 27.8123,87.5855 27.8531,87.4518 27.8229,87.4246 27.8607,87.3604 27.8282,87.2652 27.8501,87.2267 27.8206,87.1096 27.8478,87.0379 27.9506,86.9336 27.9619,86.8724 28.0231,86.7901 28.0193,86.7486 28.0986,86.5778 28.1135,86.5355 28.051,86.5144 27.9573,86.4419 27.906,86.2908 27.9777,86.2266 27.9815,86.1904 28.1707,86.0831 28.0903,86.0808 28.0155,86.1246 27.9271,86.065 27.8999,85.9471 27.9422,85.9773 27.9898,85.901 28.0533,85.8973 28.1107,85.8164 28.2028,85.7507 28.2361,85.7122 28.3856,85.5913 28.3078,85.4365 28.3343,85.3768 28.2776,85.2552 28.2935,85.2038 28.3403,85.1192 28.329,85.1087 28.3479,85.1004 28.4589,85.1479 28.4876,85.1978 28.6274,85.1147 28.687,85.0581 28.6825,84.9818 28.5911,84.8579 28.5715,84.6962 28.6364,84.6252 28.7369,84.4923 28.7354,84.4371 28.7694,84.4092 28.8509,84.2256 28.8932,84.2491 29.0368,84.1894 29.0473,84.2 29.1251,84.1214 29.2739,83.9628 29.3306,83.814 29.3027,83.8019 29.2551,83.7127 29.2445,83.6334 29.1584,83.5179 29.2181,83.4166 29.357,83.4136 29.422,83.2814 29.499,83.261 29.5776,83.15 29.6244,83.0699 29.6093,83.0088 29.6743,82.9566 29.6622,82.9143 29.7075,82.8275 29.6902,82.7515 29.7628,82.7021 29.8397,82.6401 29.8337,82.5623 29.9553,82.4974 29.9477,82.3969 30.0233,82.3637 30.0097,82.2466 30.0746,82.1665 30.0761,82.2058 30.1539,82.0993 30.2401,82.1061 30.3488,81.9951 30.3209,81.6181 30.444,81.5645 30.4297,81.5517 30.3722,81.4081 30.4206,81.4225 30.3043,81.3953 30.2068,81.2629 30.1418,81.2519 30.0539,81.245 30.0112,81.1332 30.0157,81.0916 30.0535,81.0833 30.1494,81.035 30.1978,81.0312 30.2476,80.927 30.2673,80.9073 30.3035,80.8016 30.3232,80.7343 30.401,80.6067 30.4712,80.5485 30.4485,80.4103 30.5248,80.2086 30.5883,80.1928 30.6661,80.2486 30.7197,80.1792 30.8058,80.1082 30.7817,80.0538 30.8391,79.9337 30.8791,79.8763 30.966,79.8559 30.9758,79.7524 31.006,79.6005 30.9388,79.5069 31.0324,79.4208 31.0559,79.4125 31.0725,79.4132 31.1072,79.3112 31.1495,79.3007 31.219,79.2266 31.2606,79.2501 31.2938,79.142 31.432,79.0748 31.4592,79.0106 31.3829,78.9449 31.3663,78.8837 31.2862,78.7689 31.3255,78.753 31.3852,78.7968 31.4441,78.7251 31.4849,78.7311 31.5325,78.8467 31.608,78.7598 31.6753,78.7024 31.8067,78.7681 31.9457,78.6835 32.1126,78.5967 32.1579,78.4886 32.2758,78.472 32.4412,78.4124 32.5175,78.4161 32.5673,78.5166 32.6142,78.611 32.5998,78.7228 32.6746,78.7817 32.6164,78.7576 32.5673,78.8135 32.4336,78.9683 32.3354,78.991 32.3717,79.1043 32.374,79.1315 32.4812,79.2485 32.5167,79.2757 32.5568,79.4049 32.5198,79.4525 32.6036,79.5386 32.6716,79.5575 32.7592,79.4804 32.8007,79.4714 32.8785,79.3656 32.9382,79.3286 33.0342,79.3649 33.0931,79.3747 33.1195,79.4102 33.1701,79.2168 33.2381,79.1519 33.1822,79.1451 33.186,79.0718 33.2245,79.0204 33.325,78.9351 33.3869,78.8361 33.4269,78.7326 33.569,78.7175 33.6233,78.7764 33.745,78.7425 34.0003,78.6563 34.032,78.6571 34.0743,78.7425 34.0924,78.8618 34.1657,78.926 34.1544,78.9849 34.3001,79.0574 34.2994,79.0068 34.4067,78.932 34.3802,78.7387 34.4595,78.71 34.526,78.6375 34.5434,78.5634 34.5094,78.5521 34.5713,78.4592 34.5691,78.29 34.6151,78.2711 34.7012,78.2084 34.7209,78.1857 34.7942,78.2371 34.8697,78.1774 34.9301,78.1465 35.0706,78.003 35.2406,78.0226 35.3584,78.0906 35.4226,78.1072 35.4392,78.0762 35.4959,78.0264 35.4694,77.9244 35.4974,77.9108 35.4619,77.8126 35.5223,77.6872 35.4536,77.5037 35.4891,77.4425 35.4619,77.3397 35.5178,77.3027 35.5457,77.194 35.5216,77.0618 35.6001,76.9182 35.6115,76.8533 35.6689,76.777 35.6583,76.6788 35.755,76.6153 35.7618,76.561 35.8222,76.5987 35.9,76.2988 35.8426,76.2732 35.8418,76.1651 35.823,76.1448 35.8373,76.1591 35.9174,76.1009 36.0163,76.0035 36.0171,75.9423 36.0707,75.9325 36.1357,76.0126 36.1727,75.9846 36.3502,76.0352 36.4091,75.9257 36.573,75.9423 36.5957,75.8041 36.7105,75.6893 36.7581,75.6485 36.7672,75.6213 36.7687,75.5699 36.7672,75.4687 36.7166,75.4211 36.7732,75.4204 36.8895,75.375 36.9469,75.2338 36.959,75.0291 37.0164,74.9173 36.9787,74.9135 36.9333,74.8984 36.9349,74.841 37.0429,74.8214 37.0542,74.739 37.0217,74.6975 37.0837,74.5804 37.0308,74.4958 37.0648,74.4558 37.1426,74.4951 37.1733,74.5011 37.2393,74.6582 37.2347,74.7496 37.2846,74.8093 37.2151,74.8932 37.2325,74.915 37.237,74.9105 37.2748,75.128 37.3246,75.094 37.3715,75.1537 37.4092,75.1323 37.4369,75.0554 37.5248,75.0313 37.5006,74.9324 37.5679,74.8969 37.6615,75.011 37.7763,74.9128 37.8564,74.9165 38.0248,74.8206 38.0853,74.804 38.1986,74.6982 38.228,74.7058 38.2824,74.6658 38.3806,74.6952 38.4252,74.5064 38.4713,74.2843 38.5982,74.1211 38.642,74.0721 38.5301,73.9238 38.5356,73.8039 38.6118,73.8054 38.6639,73.7442 38.7319,73.7669 38.7787,73.6981 38.852,73.757 38.9426,73.8341 38.9207,73.8537 38.9524,73.8129 39.0423,73.751 39.0257,73.6143 39.247,73.5614 39.25,73.5259 39.3913,73.5924 39.4117,73.5984 39.4578,73.6601 39.464,73.8213 39.4593,73.8636 39.4789,73.9414 39.6028,73.9149 39.7146,73.8304 39.7716,73.9127 39.8634,73.9104 39.9095,73.9814 40.0001,73.9504 40.0273,74.0282 40.084,74.0758 40.0742,74.2631 40.1248,74.3402 40.084,74.5237 40.2041,74.5857 40.2743,74.6801 40.2645,74.6945 40.3423,74.8017 40.3506,74.8629 40.3174,74.9082 40.3461,74.7896 40.4465,74.8251 40.5227,74.8347 40.5239,74.9877 40.4507,75.2202 40.4418,75.4022 40.5546,75.4604 40.6089,75.5933 40.6588,75.6409 40.507,75.7201 40.4857,75.715 40.4375,75.6432 40.3831,75.6998 40.2773,75.8245 40.3374,75.8959 40.3045,75.9673 40.3759,76.0881 40.3812,76.187 40.3814,76.2781 40.4331,76.3351 40.3382,76.4454 40.3929,76.5375 40.4647,76.5338 40.5123,76.6485 40.6286,76.6728 40.6943,76.641 40.7623,76.7022 40.7887,76.7299 40.875,76.7551 40.9534,76.8533 40.9768,76.8797 41.0274,76.9968 41.072,77.0844 41.0629,77.1849 41.0108,77.2755 41.0017,77.3548 41.041,77.478 40.9957,77.6872 41.0032,77.8776 41.0735,77.9833 41.078,78.0596 41.0327,78.1903 41.0788,78.2195 41.1449,78.2745 41.2109,78.3843 41.2713,78.3897 41.4081,78.5279 41.4398,78.5551 41.4746,78.645 41.4686,78.713 41.5532,78.815 41.5584,78.9366 41.64,79.1254 41.7231,79.2176 41.7269,79.3226 41.8107,79.4102 41.8409,79.6043 41.8561,79.6398 41.8938,79.7735 41.8938,79.88 42.0336,80.0251 42.0487,80.1391 42.0305,80.2262 42.0626,80.1481 42.1176,80.1316 42.168,80.1736 42.2129,80.1784 42.2209,80.2713 42.2262,80.2842 42.3191,80.2267 42.3591,80.2048 42.4279,80.2191 42.4853,80.2576 42.5018,80.1618 42.6318,80.223 42.7126,80.2622 42.8297,80.3272 42.8237,80.4004 42.8259,80.5886 42.8901,80.3808 43.0223,80.4114 43.0566,80.5927 43.1335,80.7245 43.1335,80.8014 43.1775,80.7789 43.3116,80.6837 43.3283,80.7532 43.4657,80.5228 43.823,80.5092 43.9069,80.4526 43.9847,80.445 44.0746,80.3944 44.1116,80.4058 44.2914,80.3491 44.4787,80.4111 44.6094,80.337 44.6894,80.2381 44.7212,80.1467 44.8277,79.9933 44.7952,79.914 44.9009,80.0923 45.0482,80.2411 45.0278,80.3189 45.0709,80.402 45.049,80.4934 45.1215,80.6059 45.1102,80.73 45.1716,80.8545 45.1283,80.9519 45.1668,81.075 45.1744,81.1128 45.2197,81.4527 45.2688,81.6264 45.3541,81.7692 45.3768,81.9225 45.2295,82.0457 45.2537,82.0993 45.2046,82.2405 45.2356,82.3066 45.2265,82.4717 45.1766,82.582 45.2182,82.5865 45.3428,82.5412 45.4214,82.4165 45.4737,82.27 45.5505,82.2572 45.6185,82.3471 45.8028,82.3335 45.9388,82.4543 45.9766,82.5125 46.1563,82.6582 46.3911,82.7627 46.5791,82.7784 46.6851,82.8902 46.8762,82.9309 47.0114,82.98 47.0311,82.9933 47.0558,83.0307 47.2123,83.1749 47.2237,83.2444 47.1784,83.3434 47.1761,83.5556 47.0681,84.0383 46.9653,84.2151 46.9993,84.4205 47.0107,84.5074 46.9782,84.7045 46.9963,84.7841 46.9074,84.806 46.825,84.9599 46.869,84.9825 46.9193,85.0701 46.9329,85.2197 47.0515,85.5294 47.0598,85.5762 47.1904,85.6903 47.2184,85.7069 47.3755,85.6034 47.5198,85.6216 47.6074,85.5415 47.9398,85.5808 48.1392,85.7356 48.3711,85.8406 48.4255,86.0498 48.4474,86.2145 48.4353,86.318 48.501,86.4479 48.4987,86.5884 48.5433,86.6337 48.6249,86.7629 48.7148,86.7516 48.7941,86.8105 48.85,86.7387 48.9059,86.7229 48.9905,86.8294 49.0501,86.8551 49.1076,86.9857 49.103,87.1346 49.1506,87.2214 49.1144,87.3126 49.0997,87.4382 49.0847,87.701 49.1707,87.8329 49.1762,87.8548 49.0444,87.9153 48.9949,87.767 48.9345,87.7505 48.885,87.9247 48.7624,88.0002 48.7624,88.0735 48.6913,88.0145 48.6551,88.004 48.566,88.3499 48.4708,88.4172 48.3907,88.4935 48.4156,88.6015 48.3439,88.5841 48.2344,88.7941 48.2162,88.9452 48.0878,89.023 48.0946,89.0705 48.047,89.0713 47.9466,89.1929 47.9503,89.3183 48.0281,89.5661 48.0485,89.6174 47.9458,89.7255 47.8922,89.7965 47.8181,89.9302 47.8166,89.9641 47.8846,90.0752 47.8529,90.0797 47.766,90.1432 47.723,90.3237 47.6671,90.3267 47.6225,90.4566 47.4873,90.4914 47.38,90.4755 47.3241,90.5178 47.2441,90.7346 47.0016,90.8812 46.9767,90.9146 46.9514,90.9658 46.8619,90.9537 46.8271,91.063 46.7097,91.03 46.6053,91.0794 46.5614,90.9733 46.361,90.8962 46.3053,91.0118 46.1239,91.0217 46.0226,90.8479 45.8874,90.7127 45.725,90.6689 45.4863,90.7671 45.432,90.8328 45.299,90.8963 45.2476,90.8645 45.2038,90.931 45.1925,91.1221 45.2144,91.2415 45.1321,91.3857 45.1117,91.4371 45.1547,91.5587 45.0686,91.6909 45.0618,91.8004 45.0815,92.0996 45.0754,92.2348 45.0135,92.3065 45.0256,92.4803 45.0006,92.7756 45.0497,92.9297 45.0157,93.1737 45.0127,93.5083 44.9651,93.6481 44.9206,93.8157 44.8224,94.1972 44.6622,94.306 44.5897,94.3339 44.5232,94.4465 44.5029,94.5756 44.4485,94.6957 44.348,94.9307 44.2891,94.9903 44.2543,95.1898 44.2649,95.4081 44.2944,95.415 44.2505,95.3721 44.2256,95.3227 44.027,95.5236 44.0005,95.6218 43.8517,95.7336 43.5972,95.8569 43.4113,95.8779 43.2761,95.9089 43.2354,96.3591 42.8992,96.3855 42.724,96.6936 42.7325,96.9353 42.7105,97.1496 42.7765,97.3803 42.749,97.7538 42.7105,98.0175 42.6831,98.2482 42.6391,98.5119 42.6336,99.292 42.5842,99.4952 42.5677,99.9951 42.6501,100.2808 42.6281,100.3247 42.6831,100.9125 42.6446,101.8189 42.4743,102.0606 42.2161,102.4122 42.1392,102.7418 42.1337,102.978 42.0239,103.3241 41.9085,103.8624 41.8096,104.0272 41.8096,104.5436 41.8865,104.5326 41.6613,104.9446 41.6448,105.0325 41.5679,105.2742 41.7437,105.3072 41.7327,105.8016 41.958,106.0103 42.0184,106.686 42.2601,107.2683 42.359,107.2957 42.4084,107.4551 42.4633,107.5539 42.4249,107.911 42.4139,108.0319 42.4414,108.2571 42.4524,108.5263 42.4579,108.7844 42.4084,108.8119 42.3864,108.9657 42.4579,109.2898 42.4304,109.548 42.4743,109.8337 42.6227,110.1523 42.6391,110.416 42.771,110.4544 42.8589,110.6192 42.9303,110.7016 43.0566,110.817 43.128,111.0477 43.3423,111.3718 43.4412,111.4377 43.4961,111.5696 43.5071,111.7124 43.6169,111.7618 43.6939,111.9706 43.7378,112.009 43.8037,111.8497 43.996,111.6684 44.0344,111.5091 44.1883,111.3938 44.3201,111.3883 44.3915,111.5146 44.5893,111.5641 44.7376,111.7399 44.9628,111.8662 45.0672,112.0859 45.0782,112.4155 45.0617,112.5968 44.9408,112.8275 44.8584,112.8989 44.8639,113.1187 44.798,113.4977 44.7925,113.5746 44.7541,114.0471 44.9518,114.3767 45.1661,114.4865 45.2869,114.5469 45.3968,114.7502 45.4517,115.0633 45.3693,115.338 45.3858,115.5797 45.4297,115.7225 45.4407,115.7665 45.5012,115.9368 45.611,116.0906 45.6824,116.1675 45.6769,116.2719 45.7593,116.2609 45.9516,116.3652 46.067,116.6069 46.2977,116.6893 46.3087,116.7663 46.3142,116.8596 46.3801,116.9365 46.3526,117.365 46.3471,117.4364 46.5778,117.6012 46.5833,117.7001 46.5064,117.8539 46.5339,117.8814 46.5778,118.0407 46.6328,118.2714 46.7866,118.5626 46.7701,118.6724 46.8031,118.7988 46.7811,118.9361 46.8196,119.0954 46.7811,119.1284 46.7207,119.2163 46.6822,119.3261 46.6932,119.436 46.6493,119.4525 46.5504,119.4031 46.457,119.5129 46.4185,119.5953 46.5504,119.7766 46.6218,119.837 46.7042,119.9194 46.7426,119.8041 46.9239,119.87 47.1601,119.8151 47.27,119.7546 47.314,119.5569 47.3469,119.48 47.3304,119.3207 47.4348,119.3371 47.5337,119.1888 47.5172,119.1229 47.704,118.7768 47.8084,118.4802 48.0006,118.0737 48.0391,117.8375 48.0226,117.7605 47.9896,117.5573 47.7864,117.4694 47.7479,117.376 47.6381,117.1068 47.8084,116.8816 47.9017,116.6619 47.8633,116.6124 47.8358,116.4476 47.8413,116.2554 47.8743,116.14 47.8358,115.9368 47.6765,115.5522 47.9457,115.5742 48.0665,115.5193 48.1819,115.8104 48.2588,115.8324 48.3357,115.8214 48.5335,116.1125 48.7917,116.0576 48.885,116.4202 49.4344,116.6839 49.8189,116.7663 49.8244,117.0135 49.6926,117.2881 49.6321,117.5738 49.6376,117.8759 49.5388,118.1616 49.6596,118.2385 49.731,118.3813 49.775,118.3868 49.8244,118.4857 49.8354,118.5626 49.9233,118.9306 49.9837,119.0844 49.9837,119.2657 50.0771,119.3097 50.154,119.3426 50.3463,119.1559 50.3573,119.2547 50.4836,119.2767 50.6045,119.4305 50.6924,119.5074 50.7912,119.4909 50.8407,119.6173 51.0055,119.6887 51.0165,119.7491 51.0989,119.7766 51.2252,119.87 51.2966,119.9029 51.39,119.9853 51.4504,120.0897 51.6757,120.1721 51.6812,120.4742 51.8844,120.6445 51.9284,120.683 52.0327,120.7764 52.1591,120.7544 52.2525,120.6226 52.3129,120.6775 52.4282,120.683 52.5106,120.4523 52.6425,120.26 52.615,120.1886 52.5766,120.0623 52.5821,120.0238 52.6315,120.0238 52.7578,120.282 52.8622,120.5292 53.071,120.6281 53.1039,120.683 53.1753,120.8753 53.2852,121.1225 53.2742,121.4081 53.3237,121.8146 53.417,122.0234 53.4225,122.1387 53.4665,122.3145 53.4994,122.4409 53.4445,122.6441 53.461,122.8309 53.4555,123.0396 53.5104,123.111 53.4994,123.2758 53.5599,123.4406 53.5324,123.5835 53.5489,123.6769 53.4885,123.8581 53.483,124.1163 53.3456,124.2482 53.3676,124.3745 53.2468,124.5283 53.1973,124.7041 53.1863,124.8305 53.1314,124.9843 53.1918,125.1985 53.1918,125.4842 53.0929,125.5776 53.082,125.7369 52.9776,125.6545 52.9062,125.6709 52.8567,125.7753 52.8952,125.9676 52.7633,126.05 52.7963,126.05 52.67,125.9731 52.659,126.006 52.5821,126.072 52.5985,126.1928 52.5326,126.3411 52.3953,126.3411 52.2525,126.2972 52.2085,126.4675 52.1701,126.5554 52.1096,126.5059 52.0272,126.4455 52.0217,126.462 51.9448,126.6707 51.7251,126.7366 51.6317,126.6927 51.5768,126.83 51.5273,126.7861 51.4504,126.885 51.401,126.9784 51.3076,126.896 51.1868,126.9234 51.0604,127.1102 50.9341,127.3574 50.5825,127.286 50.4781,127.3574 50.4232,127.3299 50.3573,127.3958 50.2804,127.5716 50.2419,127.5881 50.1595,127.5002 50.0606,127.4947 49.9782,127.5387 49.9233,127.5167 49.8354,127.665 49.764,127.698 49.6651,127.8024 49.5937,127.9452 49.6157,128.066 49.5442,128.2583 49.5003,128.3846 49.5882,128.533 49.5992,128.7088 49.5662,128.7747 49.4728,128.879 49.4783,128.9944 49.4509,129.0493 49.374,129.1317 49.352,129.2032 49.4014,129.3405 49.352,129.3844 49.4289,129.5218 49.4124,129.5492 49.2916,129.6701 49.2916,129.736 49.2092,129.8459 49.1652,129.9063 49.0553,130.2579 48.8631,130.4446 48.9015,130.5161 48.8521,130.6259 48.8796,130.6369 48.8136,130.527 48.6378,130.5875 48.5939,130.6204 48.484,130.7578 48.495,130.7303 48.4401,130.8237 48.3028,130.7523 48.1874,130.6534 48.0995,130.6809 48.0446,130.8621 47.9347,130.95 47.8193,130.9555 47.7205,131.0324 47.6875,131.1588 47.693,131.2522 47.7314,131.4994 47.726,131.5818 47.66,131.6971 47.7095,131.8015 47.671,131.9663 47.6655,131.9993 47.704,132.2465 47.704,132.3179 47.7534,132.5046 47.7095,132.598 47.7424,132.5925 47.7919,132.6914 47.9512,132.7848 47.9292,132.8782 48.0006,133.01 48.0171,133.1584 48.105,133.3451 48.105,133.466 48.0665,133.5539 48.116,133.8011 48.1984,133.8725 48.1874,133.8945 48.2588,134.0098 48.2808,134.0483 48.3357,134.3889 48.3852,134.5756 48.3632,134.713 48.2753,134.669 48.1654,134.5482 48.0226,134.5866 47.9072,134.658 47.8908,134.6745 47.8248,134.7734 47.7534,134.7514 47.6765,134.669 47.5831,134.4932 47.4458,134.3339 47.4348,134.1856 47.3304,134.1472 47.248,134.2241 47.1821,134.2131 47.1052,134.1362 47.0887,134.0648 46.9734,134.0208 46.8196,134.0483 46.7756,133.9988 46.6383,133.9109 46.5833,133.8505 46.4625,133.9439 46.3911,133.878 46.3581,133.9109 46.2647,133.7022 46.1604,133.7352 46.045,133.6637 45.9406,133.466 45.8308,133.477 45.655,133.3177 45.4957,133.2133 45.5121,133.1364 45.4188,133.0869 45.2814,133.1309 45.1331,132.9496 45.0177,132.8617 45.0562,132.8374 45.0616,132.8039 45.1764,132.7312 45.2439,132.57 45.3063,132.331 45.3427,132.1023 45.3063,132.0063 45.2469,131.9993 45.2485,131.9114 45.3309,131.829 45.3089,131.763 45.21,131.6806 45.2155,131.6861 45.1166,131.4719 44.9573,131.3456 44.9793,131.2906 44.9298,131.1478 44.9353,130.9555 44.8529,131.1038 44.6936,131.2906 44.0784,131.2027 43.7817,131.2302 43.6334,131.1972 43.5236,131.2851 43.4741,131.3071 43.3972,131.1917 43.2104,131.2027 43.1335,131.0984 43.0182,131.1368 42.9577,131.0214 42.9193,131.016 42.8534,130.8237 42.8699,130.7688 42.8314,130.6864 42.8424,130.5435 42.8094,130.4062 42.7215,130.5325 42.6996,130.6204 42.6227,130.56 42.5348,130.6149 42.4304,130.56 42.4524,130.4996 42.6172,130.3787 42.6007,130.2524 42.7051,130.2249 42.7875,130.2579 42.9028,130.1425 42.8973,130.1096 42.9468,129.9502 42.9797,129.8514 42.9632,129.7635 42.7105,129.7415 42.4633,129.6261 42.4633,129.5492 42.359,129.4449 42.4414,129.313 42.4249,129.2361 42.3755,129.2526 42.3205,129.1812 42.2326,129.2141 42.2107,129.0109 42.0953,128.9175 42.0129,128.7417 42.0404,128.5714 41.9964,128.4396 42.0294,128.2363 42.0294,128.066 41.9635,128.1045 41.7987,128.1539 41.7272,128.2748 41.6503,128.3132 41.5844,128.2034 41.4086,128.11 41.3647,127.9287 41.4526,127.8628 41.4031,127.5552 41.4306,127.5442 41.4745,127.3519 41.4636,127.264 41.513,127.1157 41.546,127.1212 41.6229,127.0553 41.6613,127.0443 41.7437,126.9289 41.8096,126.7971 41.6943,126.6213 41.6723,126.5609 41.6119,126.5883 41.5624,126.5004 41.4306,126.5279 41.3647,126.407 41.3207,126.2862 41.1614,126.1598 41.0845,126.0335 40.9252,125.9346 40.8758,125.8687 40.9032,125.7039 40.8648,125.4128 40.656,125.3249 40.6396,125.182 40.6011,125.0117 40.5297,125.0227 40.4583,124.8964 40.4803,124.7371 40.3649,124.7206 40.3209,124.5228 40.2276,124.3361 40.0628,124.3525 39.9913,124.2262 39.9199,124.2042 39.8595,123.9955 39.8156,123.8581 39.854,123.7867 39.8265,123.6109 39.843,123.4352 39.7332,123.4022 39.7826,123.3033 39.7771,123.2758 39.6947,123.133 39.6617,122.9902 39.6672,122.9353 39.6178,122.7924 39.5848,122.4848 39.4145,122.3914 39.42,122.298 39.3706,122.2376 39.2772,122.1113 39.2058,122.0948 39.1234,121.9629 39.03,121.897 39.074,121.7926 39.019,121.7212 39.0355,121.5839 38.8817,121.496 38.8213,121.3367 38.8213,121.2049 38.7224,121.1389 38.7224,121.095 38.9256,121.2268 38.9311,121.3422 38.9751,121.3752 39.0575,121.4576 39.0135,121.6608 39.0795,121.6278 39.2772,121.7542 39.3212,121.7542 39.3761,121.5235 39.3596,121.4466 39.4805,121.5509 39.5903,121.5509 39.6727,121.4576 39.7387,121.54 39.8595,121.6114 39.8595,121.6993 39.9254,121.7762 39.9144,122.0344 40.1891,122.1058 40.2331,122.287 40.4857,122.1442 40.6011,122.1168 40.678,122.0344 40.7384,121.8586 40.8153,121.8036 40.9142,121.7652 40.8483,121.5564 40.8428,121.4905 40.9032,121.1774 40.9252,121.062 40.8208,120.9741 40.8318,120.9192 40.7659,120.9357 40.689,120.8368 40.678,120.7929 40.5956,120.6226 40.4803,120.5566 40.3539,120.4962 40.3209,120.4468 40.1946,119.9414 40.0518,119.848 39.9859,119.5239 39.8815,119.5294 39.8101,119.4635 39.8101,119.3591 39.7441,119.2437 39.475,119.2987 39.4365,119.0844 39.2497,119.0075 39.2003,118.7933 39.1289,118.5681 39.1564,118.3319 39.0025,118.1835 39.0849,118.0847 39.2003,118.0077 39.2058,117.9144 39.1948,117.7496 39.0849,117.7825 38.9861,117.7166 38.9696,117.5738 38.7718,117.5573 38.618,117.7001 38.3763,117.8155 38.2609,117.8649 38.2719,118.0901 38.1401,118.3868 38.1456,118.5681 38.1071,118.5736 38.1401,118.8372 38.2115,118.8482 38.0961,118.9251 38.0687,119.002 37.9588,119.0295 37.8599,119.002 37.805,119.0789 37.7006,118.9746 37.6072,118.9526 37.5029,118.9965 37.2941,119.1229 37.2117,119.2822 37.1568,119.7381 37.1403,119.881 37.2337,119.9414 37.4095,120.1447 37.4754,120.2985 37.5908,120.2875 37.6787,120.4468 37.7501,120.5731 37.7556,120.7434 37.8325,120.9357 37.8215,120.9357 37.7775,121.0456 37.7061,121.1389 37.7116,121.1444 37.6017,121.2433 37.5743,121.3642 37.5853,121.4685 37.4699,121.5729 37.426,121.6663 37.4589,121.941 37.4699,122.1168 37.5523,122.1717 37.4315,122.2431 37.4644,122.3255 37.4095,122.5672 37.3985,122.6057 37.3765,122.5507 37.2776,122.6002 37.2117,122.4903 37.1568,122.4573 37.0744,122.5452 36.9755,122.342 36.8327,122.1827 36.8766,122.1662 36.9535,122.0453 36.9371,122.0014 36.9975,121.919 36.9316,121.6663 36.8217,121.5894 36.8547,121.3587 36.7173,121.1444 36.6844,121.0181 36.58,120.9192 36.569,120.9632 36.4756,120.8808 36.3767,120.8368 36.4646,120.7105 36.4427,120.6775 36.2504,120.6885 36.1295,120.5457 36.1131,120.4248 36.0581,120.304 36.0856,120.3699 36.2119,120.293 36.2614,120.2655 36.179,120.2216 36.2284,120.1117 36.19,120.0952 36.1076,120.1886 36.0581,120.1886 35.9043,120.0677 35.8823,120.0128 35.723,119.9524 35.767,119.9194 35.6516,119.8645 35.6077,119.7436 35.6296,119.6448 35.5582,119.5624 35.3769,119.4085 35.2671,119.3701 35.1078,119.2822 35.0858,119.2218 35.0583,119.1778 34.8551,119.2273 34.7782,119.4525 34.7397,119.4745 34.6628,119.5569 34.6024,119.7931 34.498,119.7931 34.4705,119.9469 34.4541,120.271 34.3112,120.3314 34.1135,120.3918 33.9981,120.4083 33.8333,120.5182 33.7344,120.5292 33.6081,120.6116 33.4817,120.5951 33.3664,120.7654 33.1357,120.7929 33.0423,120.8862 33.0203,120.9082 32.883,120.8808 32.7896,120.9302 32.6962,120.9027 32.6138,120.9961 32.5424,121.0785 32.5259,121.3642 32.3941,121.4026 32.2567,121.3642 32.2403,121.4246 32.1139,121.529 32.1084,121.7267 32.0315,121.8311 31.9107,121.9025 31.7678,121.8696 31.6854,121.6333 31.7349,121.474 31.8283,121.3037 31.8832,121.084 31.7953,120.9357 31.8228,120.9082 31.9161,120.8093 32.015,120.5347 32.0919,120.4358 32.059,120.4523 32.0205,120.6116 31.9876,120.7214 31.9931,120.8148 31.8667,120.8038 31.7898,121.0016 31.7568,121.2213 31.6305,121.3312 31.4987,121.7048 31.2954,121.8146 31.1361,121.9135 30.9383,121.8531 30.8614,121.518 30.8285,121.3312 30.7021,121.2708 30.7021,121.1389 30.6032,121.0291 30.5813,120.9357 30.4824,120.9137 30.3725,120.7599 30.3505,120.6555 30.4055,120.6116 30.3615,120.6665 30.2132,120.6665 30.1308,120.8478 30.1308,121.084 30.2791,121.1994 30.3231,121.3477 30.3066,121.5015 30.1857,121.6278 30.0155,121.7926 29.9715,121.941 29.8891,121.9904 29.8177,121.8696 29.7573,121.8586 29.6968,121.7102 29.5705,121.5235 29.5101,121.518 29.4606,121.7212 29.543,121.7707 29.4716,121.8421 29.5375,121.7926 29.6089,121.9245 29.6474,121.9959 29.587,121.919 29.5265,121.9794 29.4387,121.919 29.4222,121.908 29.3013,121.9629 29.2629,121.9355 29.1969,121.8421 29.164,121.6224 29.1969,121.5949 29.2739,121.4521 29.1585,121.4576 29.1091,121.5784 29.12,121.6333 29.0926,121.6773 28.8564,121.6333 28.7245,121.507 28.6586,121.5894 28.4773,121.5949 28.3675,121.6553 28.3235,121.6169 28.2576,121.5784 28.307,121.463 28.3345,121.3806 28.2356,121.3587 28.1422,121.2708 28.1972,121.2213 28.3565,121.1334 28.34,121.1005 28.1862,121.0181 28.1477,120.9577 27.9774,120.8643 27.9335,120.8478 27.8676,120.6775 27.7028,120.6116 27.5984,120.6281 27.494,120.672 27.4775,120.65 27.3677,120.5292 27.3457,120.5621 27.2963,120.4797 27.1644,120.4248 27.1974,120.3699 27.0985,120.282 27.104,120.2271 26.9172,120.1227 26.9337,120.0348 26.8238,120.1172 26.7964,120.0952 26.6151,119.9524 26.6096,119.8865 26.5162,119.8425 26.5876,119.9414 26.6096,120.0348 26.714,120.0458 26.7909,119.9359 26.7964,119.87 26.6755,119.7766 26.8128,119.6777 26.7634,119.5788 26.7909,119.6008 26.5876,119.6667 26.6206,119.7876 26.5766,119.8315 26.4503,119.6173 26.4668,119.6557 26.3624,119.7162 26.3129,119.6448 26.269,119.6503 26.2031,119.5129 26.0767,119.7217 26.0053,119.6887 25.9174,119.5843 25.835,119.6338 25.7636,119.5843 25.6922,119.469 25.6757,119.5184 25.5549,119.6393 25.467,119.6557 25.3571,119.6063 25.3461,119.5733 25.456,119.5184 25.423,119.4525 25.5109,119.3646 25.5274,119.3371 25.5878,119.1339 25.412,119.2108 25.2692,119.2877 25.3296,119.3481 25.2747,119.2822 25.1703,119.1778 25.1813,118.9965 25.2967,118.9032 25.2637,118.9801 25.1978,118.9306 25.1154,118.8537 25.0879,118.9032 25.0275,118.9087 24.9176,118.7823 24.8572,118.623 24.8352,118.6505 24.7913,118.7713 24.7693,118.7329 24.6979,118.6395 24.6485,118.6505 24.5551,118.4967 24.6265,118.2989 24.5935,118.1616 24.6814,118.1011 24.5551,118.189 24.5276,118.1286 24.4232,118.0572 24.4947,117.9803 24.4562,117.8869 24.4892,117.9034 24.3958,118.0627 24.4068,118.0517 24.3573,118.1286 24.3079,118.0352 24.2145,117.9363 24.22,117.9528 24.1651,117.9034 24.0332,117.799 24.0058,117.7111 24.0332,117.7001 23.9508,117.6012 23.8629,117.5024 23.9179,117.4364 23.7531,117.387 23.786,117.2716 23.7366,117.2167 23.6212,117.1783 23.6157,117.0849 23.5718,117.0574 23.6487,116.9091 23.6377,116.8706 23.4509,116.7553 23.3411,116.7333 23.2477,116.6454 23.1653,116.6015 23.1982,116.5355 23.1158,116.5575 23.0224,116.4971 22.94,116.2664 22.951,116.0961 22.8247,116.0686 22.8522,115.9038 22.7917,115.6456 22.8796,115.5687 22.8302,115.4698 22.7038,115.3819 22.6928,115.3105 22.7917,115.2171 22.8357,115.0468 22.7917,115.0249 22.7038,114.8875 22.594,114.7502 22.594,114.7557 22.7588,114.8216 22.7917,114.7777 22.8357,114.5195 22.7093,114.5909 22.6544,114.5469 22.572,114.6239 22.5116,114.514 22.4511,114.3931 22.6159,114.227 22.5477)),((121.3202 31.8502,121.4411 31.7513,121.5839 31.6635,121.875 31.5591,121.8201 31.4602,121.5949 31.5206,121.3806 31.6195,121.1499 31.7843,121.2268 31.8392,121.3202 31.8502)))&quot;</value>
                                <value>35.175300000000007</value>
                                <value>99.387700000000009</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Age Breakup' captured-sheet='PopulationAge' id='5' />
                  <story-point caption='GDP Growth' captured-sheet='GDPYear' id='6' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='WorldGDPDashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='863' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='100000' id='9' name='GDP' w='50000' x='0' y='0' />
                <zone h='100000' id='10' name='GDPPerCapita' w='50000' x='50000' y='0' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='63'>
    <window class='worksheet' name='Population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Population: Total (count):qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDPPerCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
            <field>[excel-direct.42012.950994398147].[sum:Finance: GDP per capita (current US$):qk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='PopulationAge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Story 2'>
      <viewpoints />
      <active id='4' />
    </window>
    <window class='worksheet' name='GDPYear'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.42012.950994398147].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.42012.950994398147].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <geo-search-visibility value='1' />
      </viewpoint>
    </window>
    <window class='dashboard' name='WorldGDPDashboard'>
      <viewpoints>
        <viewpoint name='GDP'>
          <geo-search-visibility value='1' />
        </viewpoint>
        <viewpoint name='GDPPerCapita'>
          <zoom type='entire-view' />
          <geo-search-visibility value='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='WorldData'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='GDP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GDPPerCapita' width='192'>
      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
      e/4AtcPpr6Nl+sUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GDPYear' width='192'>
      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
      1+p3gf8fida0eBPKW/UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PopulationAge' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
      9RhXVwl7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorldData' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='WorldGDPDashboard' width='192'>
      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
      Z2g536mcX72QLZDBCAAAZpLA0/d24+GdTZkcPu/Ultlw5NGtS6qxxGIi1SRS4n697eplkImC
      rSWIiXa9XhRIPla+Xqaz1XoRo4wNZ4IgcHh/B565by1K8tjGZ2eLB68+vh3N1YU7WVcIyAKo
      NSOspwDqxenqVAo9IdaK/OhdRy+yI+/TU1I9nyDlPEAq7lpXh1cf344Nyxf26WunTDi8vx0v
      HOxJKjplkFvSCX2qiE2ij6BnyqiP0QtfqrerRxOtCFDifWl9DkmSlBlq5RrS9FnZtswRJQlH
      PhjE917vw1gOF7Jrsa+rBt880Im6LGv0G8STaYukYDB1mUy9J66WkOtFZPTeM5v3zvT6WiON
      cq3ZKoBMhOXxi/f78cLJq7jpT11UKhtIAtjbWYPHbl+5pBbq5JOF6BFWaMxZAWQEUcKJiyP4
      9Uc3cfzCKPyzaLFKAFhVV4b9XTW4a11d0efj5xpDAZLJmQKoEUQJn9zw48Prk+gbDuDaeAS3
      AjT8UQ4sL4IkCDgsJlQ4LVjmLkGL14nVdWXY1FgBT5oevwazx1CAZHJUDSseE0lgbb1bWZhu
      YLBYMfIHDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoa
      QwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyK
      GkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIoaQwEMihpDAQyKGkMBDIqa/wcW
      QysINOzKTQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
